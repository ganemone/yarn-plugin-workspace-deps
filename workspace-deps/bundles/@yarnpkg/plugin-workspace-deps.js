/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-workspace-deps",
factory: function (require) {
var plugin;plugin=(()=>{"use strict";var e={968:(e,t,r)=>{r.r(t),r.d(t,{default:()=>p});const o=require("util"),s=require("fs"),a=require("path"),i=(0,o.promisify)(s.writeFile),n=(0,o.promisify)(s.readFile),d=(0,o.promisify)(s.exists),p={hooks:{afterAllInstalled:async(e,t)=>{const{report:r}=t;await r.startTimerPromise("Generating workspace-deps.txt",async()=>{await Promise.all(e.workspaces.map(async r=>{let o=new Set;for(const[t,s]of r.dependencies)o.add(e.storedResolutions.get(s.descriptorHash));for(const t of o){const r=e.storedPackages.get(t);for(const[t,s]of r.dependencies)o.add(e.storedResolutions.get(s.descriptorHash))}const s="// @generated\n"+Array.from(o).map(t=>{const r=e.storedPackages.get(t);return`${r.scope?`@${r.scope}/${r.name}`:r.name}:${t}`}).sort().join("\n"),p=(0,a.join)(r.cwd,"workspace-deps.txt");if(t.immutable){if(!await d(p))throw new Error(`Need to create workspace-deps.txt file for ${r.cwd}, but --immutable flag was passed`);if(await n(p,"utf-8")!==s)throw new Error(`Workspace ${r.cwd} needs to update workspace-deps.txt file, but --immutable flag was passed`)}await i(p,s)}))})}}}}},t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}return r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(968)})();
return plugin;
}
};